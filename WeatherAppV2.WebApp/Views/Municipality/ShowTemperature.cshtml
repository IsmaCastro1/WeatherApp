@model WeatherAppV2.Domain.Models.TemperatureRoot
@using WeatherAppV2.Domain.Entities.EMunicipality
@using System.Text.Json;
@using WeatherAppV2.WebApp.Models.ViewModels

@{
	String stateSky = Model.stateSky.description;
	String imgTemperature = "";
	switch (stateSky)
	{
		case "Cubierto" :
			imgTemperature = "/img/cloudy.svg";
			break;
		case "Despejado" :
			imgTemperature = "/img/clear-day.svg";
			break;
		case "Nubes altas" :
			imgTemperature = "/img/partly-cloudy-day.svg";
			break;
		case "Poco nuboso" :
			imgTemperature = "/img/partly-cloudy-day.svg";
			break;
		case "Cubierto con lluvia escasa":
			imgTemperature = "/img/rain.svg";
			break;
		case "Muy nuboso":
			imgTemperature = "/img/cloudy.svg";
			break;
	}

	String time = DateTime.Now.ToString().Substring(0,16);

	UserView user = null;
	try
	{
		user = JsonSerializer.Deserialize<UserView>(Context.Session.GetString("userdata"));
	}
	catch (Exception ex) { }


}



<style>
	.container-text{
		font-size:xx-large
	}
</style>



<div class="d-flex justify-content-center">
	<div class="container bg-white shadow rounded-1 bloque2 mt-5 text-center">
		<h3 class="mt-5">@Model.municipio.Nombre</h3>
		<p><b>@time</b></p>
		<b class="container-text">@Model.temperatura_actual °C  <img src="@imgTemperature" class="img" /> </b>
		<b>@stateSky</b>
		<p> <b>Max:</b> @Model.temperaturas.max °C <b>  Min:</b> @Model.temperaturas.min °C </p>

		<div class="container shadow w-50 mt-5">
			<div class="container">
				<p><b>Probabilidad lluvia:</b> @Model.precipitacion %</p>
				<p><b>Humedad:</b> @Model.humedad %</p>
				<p><b>Viento:</b> @Model.viento km/h</p>
			</div>						
		</div>


			<form asp-action="MuniFavorite" asp-controller="User">
				<button type="submit"><i class="fa-solid fa-heart" style="color: #f71d1d;"></i></button>
				<input hidden name="Codigoine" value="@Model.municipio.Codigoine" />
			</form>	
				
	</div>
</div>
